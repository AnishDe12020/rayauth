// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ProjectMemberRole {
  MEMBER
  VIEWER
}

model User {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  email            String             @unique
  address          String             @unique
  name             String?
  avatar           String?
  bio              String?
  twitter          String?
  metadata         Json?
  Project          Project[]
  ProjectMember    ProjectMember[]
  ClientSecret     ClientSecret[]
  Session          Session[]
  DelegatedAccount DelegatedAccount[]
}

model Project {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  slug             String             @unique
  logo             String?
  owner            User               @relation(fields: [ownerId], references: [id])
  ownerId          String             @db.ObjectId
  callbackUrls     String[]
  ProjectMember    ProjectMember[]
  ClientSecret     ClientSecret?
  GasTank          GasTank?
  DelegatedAccount DelegatedAccount[]
}

model ProjectMember {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  project   Project           @relation(fields: [projectId], references: [id])
  projectId String            @db.ObjectId
  user      User              @relation(fields: [userId], references: [id])
  userId    String            @db.ObjectId
  role      ProjectMemberRole
}

model ClientSecret {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  key         String   @unique
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String   @unique @db.ObjectId
  CreatedBy   User     @relation(fields: [createdById], references: [id])
  createdById String   @db.ObjectId
}

model GasTank {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  String   @unique @db.ObjectId
  address    String
  privateKey String
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  userAgent String
}

model DelegatedAccount {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  address        String   @unique
  project        Project  @relation(fields: [projectId], references: [id])
  projectId      String   @db.ObjectId
  projectAddress String
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @db.ObjectId
}
